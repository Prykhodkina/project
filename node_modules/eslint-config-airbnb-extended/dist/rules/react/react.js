"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deprecatedReactBaseRules = void 0;
const globals_1 = __importDefault(require("globals"));
const utils_1 = require("../../utils");
const reactBaseRules = {
    name: 'airbnb/config/react',
    files: utils_1.allFiles,
    languageOptions: {
        parserOptions: {
            ecmaFeatures: {
                jsx: true,
            },
        },
        globals: Object.assign({}, globals_1.default.browser),
    },
    settings: {
        react: {
            version: 'detect',
        },
    },
    // View link below for react rules documentation
    // https://github.com/jsx-eslint/eslint-plugin-react#list-of-supported-rules
    rules: {
        // Enforces consistent naming for boolean props
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/boolean-prop-naming.md
        'react/boolean-prop-naming': 'off',
        // Prevent usage of button elements without an explicit type attribute
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/button-has-type.md
        'react/button-has-type': 'error',
        // This rule enforces onChange or readonly attribute for checked property of input elements.
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/checked-requires-onchange-or-readonly.md
        'react/checked-requires-onchange-or-readonly': 'off',
        // Enforce all defaultProps have a corresponding non-required PropType
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/default-props-match-prop-types.md
        'react/default-props-match-prop-types': [
            'error',
            {
                allowRequiredDefaults: false,
            },
        ],
        // Enforce consistent usage of destructuring assignment of props, state, and context
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/destructuring-assignment.md
        'react/destructuring-assignment': ['error', 'always'],
        // Prevent missing displayName in a React component definition
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/display-name.md
        'react/display-name': 'off',
        // Forbid certain props on Components
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/forbid-component-props.md
        'react/forbid-component-props': 'off',
        // Forbid certain props on DOM Nodes
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/forbid-dom-props.md
        'react/forbid-dom-props': 'off',
        // Forbid certain elements
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/forbid-elements.md
        'react/forbid-elements': 'off',
        // Forbids using non-exported propTypes
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/forbid-foreign-prop-types.md
        // this is intentionally set to "warn". it would be "error",
        // but it's only critical if you're stripping propTypes in production.
        'react/forbid-foreign-prop-types': [
            'warn',
            {
                allowInPropTypes: true,
            },
        ],
        // Forbid certain propTypes (any, array, object)
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/forbid-prop-types.md
        'react/forbid-prop-types': [
            'error',
            {
                checkContextTypes: true,
                checkChildContextTypes: true,
            },
        ],
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/forward-ref-uses-ref.md
        'react/forward-ref-uses-ref': 'error',
        // Enforce a specific function type for function components
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/function-component-definition.md
        'react/function-component-definition': [
            'error',
            {
                namedComponents: ['function-declaration', 'function-expression'],
                unnamedComponents: 'function-expression',
            },
        ],
        // Ensure destructuring and symmetric naming of useState hook value and setter variables
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/hook-use-state.md
        'react/hook-use-state': 'off',
        // Enforce sandbox attribute on iframe elements
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/iframe-missing-sandbox.md
        'react/iframe-missing-sandbox': 'off',
        // Enforce boolean attributes notation in JSX
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-boolean-value.md
        'react/jsx-boolean-value': [
            'error',
            'never',
            {
                always: [],
            },
        ],
        // Ensures inline tags are not rendered without spaces between them
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-child-element-spacing.md
        'react/jsx-child-element-spacing': 'off',
        // Validate closing bracket location in JSX
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-closing-bracket-location.md
        'react/jsx-closing-bracket-location': ['error', 'line-aligned'],
        // Validate closing tag location in JSX
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-closing-tag-location.md
        'react/jsx-closing-tag-location': 'error',
        // Enforce curly braces or disallow unnecessary curly braces in JSX props and/or children
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-curly-brace-presence.md
        'react/jsx-curly-brace-presence': [
            'error',
            {
                props: 'never',
                children: 'never',
            },
        ],
        // Enforce linebreaks in curly braces in JSX attributes and expressions.
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-curly-newline.md
        'react/jsx-curly-newline': 'error',
        // Enforce or disallow spaces inside curly braces in JSX attributes
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-curly-spacing.md
        'react/jsx-curly-spacing': [
            'error',
            'never',
            {
                allowMultiline: true,
            },
        ],
        // Enforce spacing around jsx equals signs
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-equals-spacing.md
        'react/jsx-equals-spacing': ['error', 'never'],
        // only .jsx files may have JSX
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-filename-extension.md
        'react/jsx-filename-extension': [
            'error',
            {
                extensions: ['.jsx'],
            },
        ],
        // Require that the first prop in a JSX element be on a new line when the element is multiline
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-first-prop-new-line.md
        'react/jsx-first-prop-new-line': 'error',
        // Enforce shorthand or standard form for React fragments
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-fragments.md
        'react/jsx-fragments': ['error', 'syntax'],
        // Enforce event handler naming conventions in JSX
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-handler-names.md
        'react/jsx-handler-names': 'off',
        // Validate props indentation in JSX
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-indent-props.md
        'react/jsx-indent-props': ['error', 2],
        // Enforce JSX indentation
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-indent.md
        'react/jsx-indent': ['error', 2],
        // Validate JSX has key prop when in array or iterator
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-key.md
        // Turned off because it has too many false positives
        'react/jsx-key': 'off',
        // Validate JSX maximum depth
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-max-depth.md
        'react/jsx-max-depth': 'off',
        // Limit maximum of props on a single line in JSX
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-max-props-per-line.md
        'react/jsx-max-props-per-line': [
            'error',
            {
                maximum: 1,
                when: 'multiline',
            },
        ],
        // Enforce a new line after jsx elements and expressions
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-newline.md
        'react/jsx-newline': 'off',
        // Prevent usage of .bind() in JSX props
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md
        'react/jsx-no-bind': [
            'error',
            {
                ignoreDOMComponents: true,
                ignoreRefs: true,
                allowArrowFunctions: true,
                allowFunctions: false,
                allowBind: false,
            },
        ],
        // prevent accidental JS comments from being injected into JSX as text
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-no-comment-textnodes.md
        'react/jsx-no-comment-textnodes': 'error',
        // Prevent react contexts from taking non-stable values
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-no-constructed-context-values.md
        'react/jsx-no-constructed-context-values': 'error',
        // Prevent duplicate props in JSX
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-no-duplicate-props.md
        'react/jsx-no-duplicate-props': [
            'error',
            {
                ignoreCase: true,
            },
        ],
        // Prevent problematic leaked values from being rendered
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-no-leaked-render.md
        'react/jsx-no-leaked-render': 'off',
        // Prevent usage of unwrapped JSX strings
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-no-literals.md
        'react/jsx-no-literals': 'off',
        // Prevent usage of `javascript:` URLs
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-no-script-url.md
        'react/jsx-no-script-url': [
            'error',
            [
                {
                    name: 'Link',
                    props: ['to', 'href'],
                },
                {
                    name: 'NavLink',
                    props: ['to'],
                },
                // Custom
                {
                    name: 'NextLink',
                    props: ['to', 'href'],
                },
            ],
            {
                includeFromSettings: true,
            },
        ],
        // Disallow target="_blank" on links
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-no-target-blank.md
        'react/jsx-no-target-blank': [
            'error',
            {
                allowReferrer: false,
                enforceDynamicLinks: 'always',
                warnOnSpreadAttributes: false,
                links: true,
                forms: false,
            },
        ],
        // Disallow undeclared variables in JSX
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-no-undef.md
        'react/jsx-no-undef': [
            'error',
            {
                allowGlobals: false,
            },
        ],
        // Disallow unnecessary fragments
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-no-useless-fragment.md
        'react/jsx-no-useless-fragment': [
            'error',
            {
                allowExpressions: true,
            },
        ],
        // One JSX Element Per Line
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-one-expression-per-line.md
        'react/jsx-one-expression-per-line': ['error', { allow: 'single-child' }],
        // Enforce PascalCase for user-defined JSX components
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-pascal-case.md
        'react/jsx-pascal-case': [
            'error',
            {
                allowAllCaps: true,
                allowLeadingUnderscore: false,
                allowNamespace: true,
                ignore: [],
            },
        ],
        // Disallow multiple spaces between inline JSX props
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-props-no-multi-spaces.md
        'react/jsx-props-no-multi-spaces': 'error',
        // Disallow JSX prop spreading the same identifier multiple times
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-props-no-spread-multi.md
        'react/jsx-props-no-spread-multi': 'error',
        // Disallow JSX props spreading
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-props-no-spreading.md
        'react/jsx-props-no-spreading': 'off',
        // Enforce props alphabetical sorting
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-sort-props.md
        'react/jsx-sort-props': 'off',
        // Validate whitespace in and around the JSX opening and closing brackets
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-tag-spacing.md
        'react/jsx-tag-spacing': [
            'error',
            {
                closingSlash: 'never',
                beforeSelfClosing: 'always',
                afterOpening: 'never',
                beforeClosing: 'never',
            },
        ],
        // Prevent React to be incorrectly marked as unused
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-uses-react.md
        'react/jsx-uses-react': 'error',
        // Prevent variables used in JSX to be incorrectly marked as unused
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-uses-vars.md
        'react/jsx-uses-vars': 'error',
        // Prevent missing parentheses around multilines JSX
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-wrap-multilines.md
        'react/jsx-wrap-multilines': [
            'error',
            {
                declaration: 'parens-new-line',
                assignment: 'parens-new-line',
                return: 'parens-new-line',
                arrow: 'parens-new-line',
                condition: 'parens-new-line',
                logical: 'parens-new-line',
                prop: 'parens-new-line',
            },
        ],
        // Prevent using this.state within a this.setState
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-access-state-in-setstate.md
        'react/no-access-state-in-setstate': 'error',
        // Prevent adjacent inline elements not separated by whitespace
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-adjacent-inline-elements.md
        'react/no-adjacent-inline-elements': 'off',
        // Prevent usage of Array index in keys
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-array-index-key.md
        'react/no-array-index-key': 'error',
        // Lifecycle methods should be methods on the prototype, not class fields
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-arrow-function-lifecycle.md
        'react/no-arrow-function-lifecycle': 'error',
        // Prevent passing of children as props
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-children-prop.md
        'react/no-children-prop': [
            'error',
            {
                allowFunctions: false,
            },
        ],
        // Prevent problem with children and props.dangerouslySetInnerHTML
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-danger-with-children.md
        'react/no-danger-with-children': 'error',
        // Prevent usage of dangerous JSX properties
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-danger.md
        'react/no-danger': [
            'warn',
            {
                customComponentNames: [],
            },
        ],
        // Prevent usage of deprecated methods
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-deprecated.md
        'react/no-deprecated': 'error',
        // Prevent usage of setState in componentDidMount
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-did-mount-set-state.md
        // this is necessary for server-rendering
        'react/no-did-mount-set-state': 'off',
        // Prevent usage of setState in componentDidUpdate
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-did-update-set-state.md
        'react/no-did-update-set-state': 'error',
        // Prevent direct mutation of this.state
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-direct-mutation-state.md
        'react/no-direct-mutation-state': 'error',
        // warn against using findDOMNode()
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-find-dom-node.md
        'react/no-find-dom-node': 'error',
        // Prevent usage of invalid attributes
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-invalid-html-attribute.md
        'react/no-invalid-html-attribute': 'error',
        // Prevent usage of isMounted
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-is-mounted.md
        'react/no-is-mounted': 'error',
        // Prevent multiple component definition per file
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-multi-comp.md
        'react/no-multi-comp': 'off',
        // Enforce that namespaces are not used in React elements
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-namespace.md
        'react/no-namespace': 'error',
        // Disallow usage of referential-type variables as default param in functional component
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-object-type-as-default-prop.md
        'react/no-object-type-as-default-prop': 'off',
        // Prevent usage of shouldComponentUpdate when extending React.PureComponent
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-redundant-should-component-update.md
        'react/no-redundant-should-component-update': 'error',
        // disallow using React.render/ReactDOM.render's return value
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-render-return-value.md
        'react/no-render-return-value': 'error',
        // Prevent usage of setState
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-set-state.md
        'react/no-set-state': 'off',
        // Prevent using string references
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-string-refs.md
        'react/no-string-refs': [
            'error',
            {
                noTemplateLiterals: true,
            },
        ],
        // Prevent this from being used in stateless functional components
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-this-in-sfc.md
        'react/no-this-in-sfc': 'error',
        // Prevents common casing typos
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-typos.md
        'react/no-typos': 'error',
        // Prevent invalid characters from appearing in markup
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-unescaped-entities.md
        'react/no-unescaped-entities': 'error',
        // Prevent usage of unknown DOM property
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-unknown-property.md
        'react/no-unknown-property': [
            'error',
            {
                ignore: [],
                requireDataLowercase: false,
            },
        ],
        // Prevent usage of UNSAFE_ methods
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-unsafe.md
        'react/no-unsafe': 'off',
        // Prevent creating unstable components inside components
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-unstable-nested-components.md
        'react/no-unstable-nested-components': 'error',
        // Prevent declaring unused methods of component class
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-unused-class-component-methods.md
        'react/no-unused-class-component-methods': 'error',
        // Prevent unused propType definitions
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-unused-prop-types.md
        'react/no-unused-prop-types': [
            'error',
            {
                ignore: [],
                customValidators: [],
                skipShapeProps: true,
            },
        ],
        // Prevent unused state values
        // https://github.com/jsx-eslint/eslint-plugin-react/pull/1103/
        'react/no-unused-state': 'error',
        // Prevent usage of setState in componentWillUpdate
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/no-will-update-set-state.md
        'react/no-will-update-set-state': 'error',
        // Require ES6 class declarations over React.createClass
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/prefer-es6-class.md
        'react/prefer-es6-class': ['error', 'always'],
        // Prefer exact proptypes definitions
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/prefer-exact-props.md
        'react/prefer-exact-props': 'error',
        // Enforce that props are read-only
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/prefer-read-only-props.md
        'react/prefer-read-only-props': 'off',
        // Require stateless functions when not using lifecycle methods, setState or ref
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/prefer-stateless-function.md
        'react/prefer-stateless-function': [
            'error',
            {
                ignorePureComponents: true,
            },
        ],
        // Prevent missing props validation in a React component definition
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/prop-types.md
        'react/prop-types': [
            'error',
            {
                ignore: [],
                customValidators: [],
                skipUndeclared: false,
            },
        ],
        // Prevent missing React when using JSX
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/react-in-jsx-scope.md
        'react/react-in-jsx-scope': 'error',
        // Enforce a defaultProps definition for every prop that is not a required prop
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/require-default-props.md
        'react/require-default-props': [
            'error',
            {
                forbidDefaultForRequired: true,
                classes: 'defaultProps',
                functions: 'defaultProps',
            },
        ],
        // require a shouldComponentUpdate method, or PureRenderMixin
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/require-optimization.md
        'react/require-optimization': 'off',
        // Require render() methods to return something
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/require-render-return.md
        'react/require-render-return': 'error',
        // Prevent extra closing tags for components without children
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/self-closing-comp.md
        'react/self-closing-comp': [
            'error',
            {
                component: true,
                html: true,
            },
        ],
        // Enforce component methods order
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/sort-comp.md
        'react/sort-comp': [
            'error',
            {
                order: [
                    'static-variables',
                    'static-methods',
                    'instance-variables',
                    'lifecycle',
                    '/^handle.+$/',
                    '/^on.+$/',
                    'getters',
                    'setters',
                    '/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/',
                    'instance-methods',
                    'everything-else',
                    'rendering',
                ],
                groups: {
                    lifecycle: [
                        'displayName',
                        'propTypes',
                        'contextTypes',
                        'childContextTypes',
                        'mixins',
                        'statics',
                        'defaultProps',
                        'constructor',
                        'getDefaultProps',
                        'getInitialState',
                        'state',
                        'getChildContext',
                        'getDerivedStateFromProps',
                        'componentWillMount',
                        'UNSAFE_componentWillMount',
                        'componentDidMount',
                        'componentWillReceiveProps',
                        'UNSAFE_componentWillReceiveProps',
                        'shouldComponentUpdate',
                        'componentWillUpdate',
                        'UNSAFE_componentWillUpdate',
                        'getSnapshotBeforeUpdate',
                        'componentDidUpdate',
                        'componentDidCatch',
                        'componentWillUnmount',
                    ],
                    rendering: ['/^render.+$/', 'render'],
                },
            },
        ],
        // Enforce defaultProps declarations alphabetical sorting
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/sort-default-props.md
        'react/sort-default-props': 'off',
        // Enforce propTypes declarations alphabetical sorting
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/sort-prop-types.md
        'react/sort-prop-types': 'off',
        // Enforce state initialization style
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/state-in-constructor.md
        'react/state-in-constructor': ['error', 'always'],
        // Enforces where React component static properties should be positioned
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/static-property-placement.md
        'react/static-property-placement': ['error', 'property assignment'],
        // Require style prop value be an object or var
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/style-prop-object.md
        'react/style-prop-object': [
            'error',
            {
                allow: [],
            },
        ],
        // Prevent void DOM elements from receiving children
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/void-dom-elements-no-children.md
        'react/void-dom-elements-no-children': 'error',
    },
};
exports.deprecatedReactBaseRules = {
    name: 'airbnb/config/react/deprecated',
    files: utils_1.allFiles,
    rules: {
        // Enforce defaultProps declarations alphabetical sorting
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-sort-default-props.md
        'react/jsx-sort-default-props': 'off',
        // Enforce spaces before the closing bracket of self-closing JSX elements, Deprecated in favor of jsx-tag-spacing
        // https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-space-before-closing.md
        'react/jsx-space-before-closing': 'off',
    },
};
exports.default = reactBaseRules;
