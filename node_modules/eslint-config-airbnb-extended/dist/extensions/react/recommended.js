"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const getImportSettings_1 = __importDefault(require("../../helpers/getImportSettings"));
const getStylisticLegacyConfig_1 = __importDefault(require("../../helpers/getStylisticLegacyConfig"));
const style_1 = __importDefault(require("../../rules/style"));
const utils_1 = require("../../utils");
const dangleRules = style_1.default.rules['no-underscore-dangle'];
const reactRecommendedExtensionsConfig = [
    {
        name: 'airbnb/config/react-settings-extensions-configurations',
        files: utils_1.jsFiles,
        settings: (0, getImportSettings_1.default)({ javascript: true, typescript: false, jsx: true }),
    },
    {
        name: 'airbnb/config/react-configurations',
        files: utils_1.allFiles,
        rules: {
            // disallow dangling underscores in identifiers
            // https://eslint.org/docs/latest/rules/no-underscore-dangle
            // Allow Redux devtools variable
            'no-underscore-dangle': [
                dangleRules[0],
                Object.assign(Object.assign({}, dangleRules[1]), { allow: [...dangleRules[1].allow, '__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] }),
            ],
            // enforce that class methods use "this"
            // https://eslint.org/docs/rules/class-methods-use-this
            // Class Methods can be used in React
            'class-methods-use-this': [
                'error',
                {
                    exceptMethods: [
                        'render',
                        'getInitialState',
                        'getDefaultProps',
                        'getChildContext',
                        'componentWillMount',
                        'UNSAFE_componentWillMount',
                        'componentDidMount',
                        'componentWillReceiveProps',
                        'UNSAFE_componentWillReceiveProps',
                        'shouldComponentUpdate',
                        'componentWillUpdate',
                        'UNSAFE_componentWillUpdate',
                        'componentDidUpdate',
                        'componentWillUnmount',
                        'componentDidCatch',
                        'getSnapshotBeforeUpdate',
                    ],
                },
            ],
        },
    },
    {
        name: 'airbnb/config/react-stylistic',
        files: utils_1.allFiles,
        rules: {
            // specify whether double or single quotes should be used in JSX attributes
            // https://eslint.style/rules/js/jsx-quotes
            '@stylistic/jsx-quotes': ['error', 'prefer-double'],
        },
    },
    Object.assign({ name: 'airbnb/config/react-disable-legacy-stylistic-react-config', files: utils_1.allFiles }, (0, getStylisticLegacyConfig_1.default)('react')),
];
exports.default = reactRecommendedExtensionsConfig;
